{"version":3,"sources":["contexts/ThemeContext.js","components/Nav.js","components/Home.js","components/ChampionList.js","components/Champion.js","components/Summoners.js","components/App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","useState","isLightTheme","light","syntax","ui","bg","dark","theme","Provider","value","children","Nav","useContext","className","style","background","color","to","Home","ChampionList","list","setList","updatedList","setUpdatedList","setHead","inputValue","setInputValue","useEffect","fetch","then","res","json","data","console","log","Object","keys","filter","champion","toLowerCase","includes","type","placeholder","onChange","event","target","map","key","src","name","title","lore","stats","hp","hpperlevel","mp","mpperlevel","movespeed","armor","armorperlevel","spellblock","spellblockperlevel","attackrange","hpregen","hpregenperlevel","mpregen","mpregenperlevel","attackdamage","attackdamageperlevel","attackspeed","attackspeedperlevel","spells","champ","setChamp","setName","setTitle","setLore","setStats","id","match","params","toUpperCase","alt","spell","description","image","full","Summoners","setKey","summonerName","setSummonerName","fetchSummoner","a","rawFetchSummoner","parsedSummoner","onClick","App","path","exact","component","Champion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.830476a4.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react'\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\r\n    const [theme, setTheme] = useState(\r\n        {\r\n            isLightTheme: true,\r\n            light: { syntax: '#555', ui: '#ddd', bg: '#eee'},\r\n            dark: { syntax: '#ddd', ui: '#333', bg: '#555'}\r\n        }\r\n    )\r\n    return ( \r\n        <ThemeContext.Provider value={{...theme}}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ThemeContextProvider;","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nimport './styles/Nav.css'\r\n\r\nconst Nav = () => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext)\r\n    const theme = isLightTheme ? light : dark;\r\n    return(\r\n        <div className='nav' style={{ background: theme.ui, color: theme.syntax }}>\r\n            <Link style={{ background: theme.ui, color: theme.syntax }} to='/'>\r\n                <div>Home</div>\r\n            </Link>\r\n            <Link style={{ background: theme.ui, color: theme.syntax }} to='/Champions'>\r\n                <div>Champions</div>\r\n            </Link>\r\n            <Link style={{ background: theme.ui, color: theme.syntax }} to='/Summoners'>\r\n                <div>Summoners</div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div>\r\n            <h2>A website that uses Riot Games API to display the list and information of the Champions available in the game, and also search for different players and their stats.</h2>\r\n            <h3>What I have used:</h3>\r\n            <ul>\r\n                <li>React</li>\r\n                <li>React-Router</li>\r\n                <li>Context API</li>\r\n                <li>Hooks</li>\r\n            </ul>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState, useEffect, useContext} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nimport './styles/ChampionList.css'\r\n\r\nconst ChampionList = () => {\r\n\r\n    const [list, setList] = useState([]);\r\n    const [updatedList, setUpdatedList] = useState([]);\r\n    const [head, setHead] = useState(false)\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('https://ddragon.leagueoflegends.com/cdn/10.22.1/data/en_US/champion.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log('not lis',Object.keys(data.data))\r\n            setList(Object.keys(data.data));\r\n            setUpdatedList(Object.keys(data.data));\r\n            console.log('list', list)\r\n            setHead(true)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        (inputValue === '') ? setUpdatedList(list) : setUpdatedList(list.filter(champion => champion.toLowerCase().includes(inputValue.toLowerCase())))\r\n    },[inputValue])\r\n\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext)\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return(\r\n        <div style={{ background: theme.bg }}>\r\n            <div style={{ background: theme.ui, color: theme.syntax }} className='champlist'>\r\n                <div className='searchbar-container'>\r\n                    <input\r\n                        className='searchbar'\r\n                        type=\"text\"\r\n                        placeholder='Champion Name'\r\n                        value={`${inputValue}`}\r\n                        onChange={(event) => setInputValue(event.target.value)}></input>\r\n                </div>\r\n\r\n                <div className='champlist-container'>\r\n                    {updatedList.map(champion => {\r\n                        return(\r\n                            <Link className='champlist-item'\r\n                                style={{ background: theme.ui, color: theme.syntax }}\r\n                                key={`${champion}`}\r\n                                to={`/Champions/${champion}`}>\r\n                                    <img src={`https://ddragon.leagueoflegends.com/cdn/10.22.1/img/champion/${champion}.png`}></img>\r\n                                    <h3>{champion}</h3>\r\n                            </Link>\r\n                        )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChampionList;\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nimport './styles/Champion.css'\r\n\r\nconst ChampionList = (props) => {\r\n    \r\n    const [champ, setChamp] = useState({\r\n        name:'',\r\n        title: '',\r\n        lore: '',\r\n        stats: {\r\n            hp: 0,\r\n            hpperlevel: 0,\r\n            mp: 0,\r\n            mpperlevel: 0,\r\n            movespeed: 0,\r\n            armor: 0,\r\n            armorperlevel: 0,\r\n            spellblock: 0,\r\n            spellblockperlevel: 0,\r\n            attackrange: 0,\r\n            hpregen: 0,\r\n            hpregenperlevel: 0,\r\n            mpregen: 0,\r\n            mpregenperlevel: 0,\r\n            attackdamage: 0,\r\n            attackdamageperlevel: 0,\r\n            attackspeed: 0,\r\n            attackspeedperlevel: 0,\r\n        },\r\n        spells: []\r\n    });\r\n    \r\n    const [name, setName] = useState('name');\r\n    const [title, setTitle] = useState('')\r\n    const [lore, setLore] = useState('')\r\n    const [stats, setStats] = useState('')\r\n\r\n    const [head, setHead] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.id\r\n        //console.log(id)\r\n        fetch(`https://ddragon.leagueoflegends.com/cdn/10.22.1/data/en_US/champion/${id}.json`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setChamp(data['data'][`${id}`])\r\n            })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        // setName((prevName)=>{\r\n        //     return (typeof(champ['name']) === undefined) ? prevName : champ['name'] })\r\n        setName(champ['name'])\r\n        setTitle(champ[\"title\"])\r\n        setLore(champ['lore'])\r\n        setStats(champ['stats'])\r\n        console.log('name', name)\r\n        console.log('title', title)\r\n        console.log('lore', lore)\r\n        console.log('stats', stats)\r\n        console.log(typeof(name))\r\n        console.log(champ.spells)\r\n    }, [champ, name, title, lore, stats])\r\n    \r\n    const { isLightTheme, light, dark } = useContext(ThemeContext)\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return(\r\n        <div className='outer_container'>\r\n            <div className='level-1-container'>\r\n                <div className='level-1-item name-lore'>\r\n                    <div className='name-title'>\r\n                        <h1 className='name'><strong>{name.toUpperCase()}</strong></h1>\r\n                        <h3 className='title'>{title}</h3>\r\n                    </div>                    \r\n                    <h3 className='lore'>{lore}</h3>\r\n                </div>\r\n                <div className='level-1-item load-screen-image'>\r\n                    <img alt={`${name}`} src={`https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${name}_0.jpg`} />\r\n                </div>\r\n            </div>\r\n            <div className='level-2-container'>\r\n                <h2>Stats</h2>\r\n                <div className='stats-container'>\r\n                    <div className='left-container'>\r\n                        <ul>\r\n                            <li><strong>HP:</strong> {stats.hp +'+'+ stats.hpperlevel}</li>\r\n                            <li><strong>HP regen:</strong> {`${stats.hpregen}+${stats.hpregenperlevel}`}</li>\r\n                            <li><strong>Mana:</strong> {stats.mp +'+'+ stats.mpperlevel}</li>\r\n                            <li><strong>Mana regen:</strong> {`${stats.mpregen}+${stats.mpregenperlevel}`}</li>\r\n                            <li><strong>Move Speed:</strong> {`${stats.movespeed}`}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='right-container'>\r\n                        <ul>\r\n                            <li><strong>Attack Damage:</strong> {stats.attackdamage +'+'+ stats.attackdamageperlevel}</li>\r\n                            <li><strong>Attack Speed:</strong> {`${stats.attackspeed}+${stats.attackspeedperlevel}`}</li>\r\n                            <li><strong>Armor:</strong> {stats.armor +'+'+ stats.armorperlevel}</li>\r\n                            <li><strong>Magic Resist:</strong> {`${stats.spellblock}+${stats.spellblockperlevel}`}</li>\r\n                            <li><strong>Attack Range:</strong> {`${stats.attackrange}`}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='right-container'></div>\r\n                </div>\r\n            </div>\r\n            <div className='level-3-container'>\r\n                {champ.spells.map(spell => {\r\n                    return(\r\n                        <div className='ability' key={`${spell.id}`}>\r\n                            <div className='ability-text'>\r\n                                <h3>{spell.name}</h3>\r\n                                <p>{spell.description}</p>\r\n                            </div>\r\n                            <div className='ability-image'>\r\n                                <img src={`https://ddragon.leagueoflegends.com/cdn/10.22.1/img/spell/${spell.image.full}`}/>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChampionList;","import React, { useState, useEffect } from 'react'\r\n\r\nconst Summoners = () => {\r\n\r\n    const [key, setKey] = useState('')\r\n    const [summonerName, setSummonerName] = useState('')\r\n\r\n    const fetchSummoner = async () => {\r\n        console.log(key, summonerName)\r\n        // const rawFetchSummoner = await fetch(`https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${summonerName}?api_key=${key}`, {mode: 'cors'})\r\n        const rawFetchSummoner = await fetch('https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/scarlet%20fan?api_key=RGAPI-7043fe11-850f-45f9-b169-dea57a49a547')\r\n        const parsedSummoner = await rawFetchSummoner.json()\r\n        console.log('fetch response',parsedSummoner)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className='summoner'>\r\n            <div className='inputs'>\r\n                <input type='text'\r\n                    placeholder='Developer Key'\r\n                    value={`${key}`}\r\n                    onChange={(event)=>{setKey(event.target.value)}}\r\n                />\r\n                <input type='text'\r\n                    placeholder='Summoner Name'\r\n                    value={`${summonerName}`}\r\n                    onChange={(event)=>{setSummonerName(event.target.value)}}\r\n                />\r\n                <button onClick={fetchSummoner}>Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summoners;","import React from 'react'\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport Nav from './Nav'\r\nimport Home from './Home'\r\nimport ChampionList from './ChampionList'\r\nimport Champion from './Champion'\r\nimport Summoners from './Summoners'\r\nimport ThemeContextProvider from '../contexts/ThemeContext'\r\n\r\nconst App = () => {\r\n    return(\r\n        <ThemeContextProvider>\r\n            <Router>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route path='/Champions' exact component={ChampionList} />\r\n                    <Route path='/Champions/:id' exact component={Champion} />\r\n                    <Route path='/Summoners' exact component={Summoners} />\r\n                    <Route path='/Summoners/:id' component={Summoners} />\r\n                    <Route path='/' component={Home} />\r\n                </Switch>            \r\n            </Router>\r\n        </ThemeContextProvider>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}