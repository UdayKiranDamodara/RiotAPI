{"version":3,"sources":["contexts/ThemeContext.js","components/Nav.js","components/Home.js","components/ChampionList.js","components/Champion.js","components/GameData.js","components/Summoners.js","components/App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","useState","isLightTheme","light","syntax","ui","bg","dark","theme","Provider","value","children","Nav","useContext","className","style","background","color","to","Home","ChampionList","list","setList","updatedList","setUpdatedList","setHead","inputValue","setInputValue","useEffect","fetch","then","res","json","data","console","log","Object","keys","filter","champion","toLowerCase","includes","type","placeholder","onChange","event","target","map","key","height","width","src","name","title","lore","stats","hp","hpperlevel","mp","mpperlevel","movespeed","armor","armorperlevel","spellblock","spellblockperlevel","attackrange","hpregen","hpregenperlevel","mpregen","mpregenperlevel","attackdamage","attackdamageperlevel","attackspeed","attackspeedperlevel","spells","champ","setChamp","setName","setTitle","setLore","setStats","id","match","params","toUpperCase","alt","spell","description","image","full","GameData","participantId","gameId","summonerName","apiKey","fetchMatchData","matchData","setMatchData","win","spell1Id","spell2Id","kills","deaths","assists","championName","display","setDisplay","getParticipantId","a","rawMatchData","parsedMatchData","undefined","participantIdentities","item","player","getPlayerInfo","participants","info","temp","getChampionName","championId","getSummonerSpellName","rawData","parsedData","values","temp2","prevState","newState","num","spell1Name","spell2Name","backgroundColor","gameMode","classname","Math","floor","gameDuration","Summoners","setKey","setSummonerName","fetchData","setFetchData","matches","setMatches","fetchMatchHistory","fetchSummoner","rawFetchSummoner","parsedSummoner","accountId","rawMatchHistory","parsedMatchHistory","onClick","App","path","exact","component","Champion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAEaA,EAAeC,0BAkBbC,EAhBc,SAACC,GAAW,IAAD,EAEVC,mBACtB,CACIC,cAAc,EACdC,MAAO,CAAEC,OAAQ,OAAQC,GAAI,OAAQC,GAAI,QACzCC,KAAM,CAAEH,OAAQ,OAAQC,GAAI,OAAQC,GAAI,UANZ,mBAE7BE,EAF6B,UASpC,OACI,kBAACX,EAAaY,SAAd,CAAuBC,MAAK,eAAMF,IAC7BR,EAAMW,WCSJC,G,MAlBH,WAAO,IAAD,EACwBC,qBAAWhB,GAAzCK,EADM,EACNA,aAAcC,EADR,EACQA,MAAOI,EADf,EACeA,KACvBC,EAAQN,EAAeC,EAAQI,EACrC,OACI,yBAAKO,UAAU,MAAMC,MAAO,CAAEC,WAAYR,EAAMH,GAAIY,MAAOT,EAAMJ,SAC7D,kBAAC,IAAD,CAAMW,MAAO,CAAEC,WAAYR,EAAMH,GAAIY,MAAOT,EAAMJ,QAAUc,GAAG,KAC3D,sCAEJ,kBAAC,IAAD,CAAMH,MAAO,CAAEC,WAAYR,EAAMH,GAAIY,MAAOT,EAAMJ,QAAUc,GAAG,cAC3D,2CAEJ,kBAAC,IAAD,CAAMH,MAAO,CAAEC,WAAYR,EAAMH,GAAIY,MAAOT,EAAMJ,QAAUc,GAAG,cAC3D,8CCADC,EAhBF,WACT,OACI,yBAAKL,UAAU,kBACX,4OACA,yBAAKA,UAAU,UAAS,iDACxB,wBAAIA,UAAU,UACV,qCACA,4CACA,2CACA,yCCsDDM,G,MA3DM,WAAO,IAAD,EAECnB,mBAAS,IAFV,mBAEhBoB,EAFgB,KAEVC,EAFU,OAGerB,mBAAS,IAHxB,mBAGhBsB,EAHgB,KAGHC,EAHG,OAICvB,oBAAS,GAJV,mBAIVwB,GAJU,aAKaxB,mBAAS,IALtB,mBAKhByB,EALgB,KAKJC,EALI,KAOvBC,qBAAU,WACNC,MAAM,4EACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFC,QAAQC,IAAI,UAAUC,OAAOC,KAAKJ,EAAKA,OACvCX,EAAQc,OAAOC,KAAKJ,EAAKA,OACzBT,EAAeY,OAAOC,KAAKJ,EAAKA,OAChCC,QAAQC,IAAI,OAAQd,GACpBI,GAAQ,QAEb,IAEHG,qBAAU,WACgBJ,EAAN,KAAfE,EAAoCL,EAAuBA,EAAKiB,QAAO,SAAAC,GAAQ,OAAIA,EAASC,cAAcC,SAASf,EAAWc,qBACjI,CAACd,IArBoB,MAuBeb,qBAAWhB,GAAzCK,EAvBe,EAuBfA,aAAcC,EAvBC,EAuBDA,MAAOI,EAvBN,EAuBMA,KACvBC,EAAQN,EAAeC,EAAQI,EAErC,OACI,yBAAKQ,MAAO,CAAEC,WAAYR,EAAMF,KAC5B,yBAAKS,MAAO,CAAEC,WAAYR,EAAMH,GAAIY,MAAOT,EAAMJ,QAAUU,UAAU,aACjE,yBAAKA,UAAU,uBACX,2BACIA,UAAU,YACV4B,KAAK,OACLC,YAAY,gBACZjC,MAAK,UAAKgB,GACVkB,SAAU,SAACC,GAAD,OAAWlB,EAAckB,EAAMC,OAAOpC,WAGxD,yBAAKI,UAAU,uBACVS,EAAYwB,KAAI,SAAAR,GACb,OACI,kBAAC,IAAD,CAAMzB,UAAU,iBACZC,MAAO,CAAEC,WAAYR,EAAMH,GAAIY,MAAOT,EAAMJ,QAC5C4C,IAAG,UAAKT,GACRrB,GAAE,qBAAgBqB,IACd,yBAAKU,OAAO,QAAQC,MAAM,QAAQC,IAAG,uEAAkEZ,EAAlE,UACrC,4BAAKA,YC0E1BnB,G,MAzHM,SAACpB,GAAW,IAAD,EAEFC,mBAAS,CAC/BmD,KAAK,GACLC,MAAO,GACPC,KAAM,GACNC,MAAO,CACHC,GAAI,EACJC,WAAY,EACZC,GAAI,EACJC,WAAY,EACZC,UAAW,EACXC,MAAO,EACPC,cAAe,EACfC,WAAY,EACZC,mBAAoB,EACpBC,YAAa,EACbC,QAAS,EACTC,gBAAiB,EACjBC,QAAS,EACTC,gBAAiB,EACjBC,aAAc,EACdC,qBAAsB,EACtBC,YAAa,EACbC,oBAAqB,GAEzBC,OAAQ,KA1BgB,mBAErBC,EAFqB,KAEdC,EAFc,OA6BJ3E,mBAAS,QA7BL,mBA6BrBmD,EA7BqB,KA6BfyB,EA7Be,OA8BF5E,mBAAS,IA9BP,mBA8BrBoD,EA9BqB,KA8BdyB,EA9Bc,OA+BJ7E,mBAAS,IA/BL,mBA+BrBqD,EA/BqB,KA+BfyB,EA/Be,OAgCF9E,mBAAS,IAhCP,mBAgCrBsD,EAhCqB,KAgCdyB,EAhCc,OAkCJ/E,oBAAS,GAlCL,6BAoC5B2B,qBAAU,WACN,IAAMqD,EAAKjF,EAAMkF,MAAMC,OAAOF,GAE9BpD,MAAM,uEAAD,OAAwEoD,EAAxE,UACJnD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF2C,EAAS3C,EAAI,KAAJ,UAAgBgD,UAE9B,IAEHrD,qBAAU,WAGNiD,EAAQF,EAAK,MACbG,EAASH,EAAK,OACdI,EAAQJ,EAAK,MACbK,EAASL,EAAK,OACdzC,QAAQC,IAAI,OAAQiB,GACpBlB,QAAQC,IAAI,QAASkB,GACrBnB,QAAQC,IAAI,OAAQmB,GACpBpB,QAAQC,IAAI,QAASoB,GACrBrB,QAAQC,WAAWiB,GACnBlB,QAAQC,IAAIwC,EAAMD,UACnB,CAACC,EAAOvB,EAAMC,EAAOC,EAAMC,IA3DF,MA6DU1C,qBAAWhB,GA7DrB,EA6DpBK,aA7DoB,EA6DNC,MA7DM,EA6DCI,KAG7B,OACI,yBAAKO,UAAU,mBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,QAAO,gCAASsC,EAAKgC,gBACnC,wBAAItE,UAAU,SAASuC,IAE3B,wBAAIvC,UAAU,QAAQwC,IAE1B,yBAAKxC,UAAU,kCACX,yBAAKA,UAAU,gBAAgBuE,IAAG,UAAKjC,GAAQD,IAAG,uEAAkEC,EAAlE,cAG1D,yBAAKtC,UAAU,qBACX,qCACA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,kBACX,4BACI,4BAAI,uCAAJ,IAA0ByC,EAAMC,GAAI,IAAKD,EAAME,YAC/C,4BAAI,6CAAJ,cAAmCF,EAAMW,QAAzC,YAAoDX,EAAMY,kBAC1D,4BAAI,yCAAJ,IAA4BZ,EAAMG,GAAI,IAAKH,EAAMI,YACjD,4BAAI,+CAAJ,cAAqCJ,EAAMa,QAA3C,YAAsDb,EAAMc,kBAC5D,4BAAI,+CAAJ,cAAqCd,EAAMK,cAGnD,yBAAK9C,UAAU,mBACX,4BACI,4BAAI,kDAAJ,IAAqCyC,EAAMe,aAAc,IAAKf,EAAMgB,sBACpE,4BAAI,iDAAJ,cAAuChB,EAAMiB,YAA7C,YAA4DjB,EAAMkB,sBAClE,4BAAI,0CAAJ,IAA6BlB,EAAMM,MAAO,IAAKN,EAAMO,eACrD,4BAAI,iDAAJ,cAAuCP,EAAMQ,WAA7C,YAA2DR,EAAMS,qBACjE,4BAAI,iDAAJ,cAAuCT,EAAMU,gBAGrD,yBAAKnD,UAAU,sBAGvB,yBAAKA,UAAU,qBACV6D,EAAMD,OAAO3B,KAAI,SAAAuC,GACd,OACI,yBAAKxE,UAAU,UAAUkC,IAAG,UAAKsC,EAAML,KACnC,yBAAKnE,UAAU,gBACX,4BAAKwE,EAAMlC,MACX,2BAAIkC,EAAMC,cAEd,yBAAKzE,UAAU,iBACX,yBAAKoC,MAAM,OAAOD,OAAO,OAAOE,IAAG,oEAA+DmC,EAAME,MAAMC,iB,wBC+B/HC,G,MA/IE,SAAC,GAAsC,IAOhDC,EAPYC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAGtClE,qBAAU,WACNmE,MACF,CAACH,IALgD,MASjB3F,mBAAS,CACvC,aAAgB,GAGhB,sBAAyB,KAbsB,mBAS5C+F,EAT4C,KASjCC,EATiC,OAkBrBhG,mBAAS,CACnCiG,IAAK,GACLC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,aAAc,KAzBiC,mBAkB5CC,EAlB4C,KAkBnCC,EAlBmC,KA4BnD9E,qBAAU,WACNmE,MACD,IAEHnE,qBAAU,WAEN+E,MACD,CAACX,IAEJpE,qBAAU,WACNM,QAAQC,IAAI,UAAWsE,KACxB,CAACA,IAEJ,IAAMV,EAAc,uCAAG,8BAAAa,EAAA,sEACQ/E,MAAM,2FAAD,OAA4F+D,EAA5F,oBAA8GE,IAD3H,cACbe,EADa,gBAEWA,EAAa7E,OAFxB,OAEb8E,EAFa,OAGnB5E,QAAQC,IAAI,oBAAqB2E,GACjCb,EAAaa,GAJM,2CAAH,qDAOdH,EAAmB,WACrB,IAAI1E,OACmC8E,IAApCf,EAAUgB,wBAAsC/E,EAAQ+D,EAAUgB,sBAAsB1E,QAAO,SAAA2E,GAAI,OAAIA,EAAKC,OAAOrB,aAAarD,gBAAkBqD,KAAc,SACzJkB,IAAP9E,QAA2C8E,IAAvB9E,EAAK0D,gBACxBA,EAAgB1D,EAAK0D,cAErBwB,MAKFA,EAAgB,WAClB,IAAMC,EAAepB,EAAUoB,aAC/BlF,QAAQC,IAAIiF,GAFW,MAGRA,EAAa9E,QAAO,SAAA2E,GAAI,OAAItB,IAAkBsB,EAAKtB,iBAA3D0B,EAHgB,oBAIvBnF,QAAQC,IAAIkF,GAEZ,IAAMC,EAAO,CACTpB,IAAKmB,EAAK9D,MAAM2C,IAChBC,SAAUkB,EAAKlB,SACfC,SAAUiB,EAAKjB,SACfC,MAAOgB,EAAK9D,MAAM8C,MAClBC,OAAQe,EAAK9D,MAAM+C,OACnBC,QAASc,EAAK9D,MAAMgD,SAExBgB,EAAgBF,EAAKG,YACrBC,EAAqBJ,EAAKlB,SAAU,GACpCsB,EAAqBJ,EAAKjB,SAAU,GACpCM,EAAWY,IAITC,EAAe,uCAAG,WAAOtC,GAAP,yBAAA2B,EAAA,sEACE/E,MAAM,4EADR,cACd6F,EADc,gBAEKA,EAAQ1F,OAFb,OAEd2F,EAFc,OAGdL,EAAOlF,OAAOwF,OAAOD,EAAW1F,MAHlB,EAIJqF,EAAKhF,QAAO,SAAA2E,GAAI,OAAIA,EAAKjE,KAAOiC,KAJ5B,mBAIb4C,EAJa,KAKpB3F,QAAQC,IAAI0F,EAAM5C,IAClByB,GAAW,SAACoB,GACR,IAAMC,EAAQ,eAAOD,GAErB,OADAC,EAASvB,aAAeqB,EAAM5C,GACvB8C,KATS,4CAAH,sDAafN,EAAoB,uCAAG,WAAOxC,EAAI+C,GAAX,yBAAApB,EAAA,sEACH/E,MAAM,gHADH,cACnB6F,EADmB,gBAEAA,EAAQ1F,OAFR,OAEnB2F,EAFmB,OAGnBL,EAAOlF,OAAOwF,OAAOD,EAAW1F,MAHb,EAITqF,EAAKhF,QAAO,SAAA2E,GAAI,OAAIA,EAAKjE,KAAOiC,KAJvB,mBAIlB4C,EAJkB,KAKzB3F,QAAQC,IAAI,oBAAqB0F,EAAM5C,IAEnCyB,EADK,IAARsB,EACc,SAACF,GACR,IAAMC,EAAQ,eAAOD,GAErB,OADAC,EAASE,WAAaJ,EAAM5C,GACrB8C,GAEA,SAACD,GACR,IAAMC,EAAQ,eAAOD,GAErB,OADAC,EAASG,WAAaL,EAAM5C,GACrB8C,IAfU,4CAAH,wDAoB1B,OACI,6BAG+B,KAAzBtB,EAAQD,aACN,yBAAK1F,UAAU,YAAYC,MAAO,CAACoH,gBAAkB1B,EAAQP,IAAK,cAAc,qBAC5E,yBAAKpF,UAAU,aAAakF,EAAUoC,UACtC,yBAAKtH,UAAU,YACX,yBAAKuH,UAAU,uBAAuBlF,IAAG,uEAAkEsD,EAAQD,aAA1E,UACzC,6BAAMC,EAAQD,eAElB,yBAAK1F,UAAU,aACX,yBAAKoC,MAAM,OAAOD,OAAO,OAAOE,IAAG,oEAA+DsD,EAAQwB,WAAvE,UACnC,yBAAK/E,MAAM,OAAOD,OAAO,OAAOE,IAAG,oEAA+DsD,EAAQyB,WAAvE,WAEvC,yBAAKpH,UAAU,QACX,yBAAKA,UAAU,OACX,uCAAS2F,EAAQJ,MAAjB,YAA0BI,EAAQH,OAAlC,YAA4CG,EAAQF,UACpD,uCAEJ,6BACA,yBAAKzF,UAAU,YAAYwH,KAAKC,MAAMvC,EAAUwC,aAAa,IAA7D,KAAoExC,EAAUwC,aAAa,GAA3F,OAIV,iCC/DCC,G,MAxEG,WAAO,IAAD,EAEExI,mBAAS,IAFX,mBAEb+C,EAFa,KAER0F,EAFQ,OAGoBzI,mBAAS,kBAH7B,mBAGb4F,EAHa,KAGC8C,EAHD,OAKc1I,mBAAS,IALvB,mBAKb2I,EALa,KAKFC,EALE,OAMU5I,mBAAS,CAAC,KANpB,mBAMb6I,EANa,KAMJC,EANI,KASpBnH,qBAAU,WACNoH,MACD,CAACJ,IAEJhH,qBAAU,WACNM,QAAQC,IAAI2G,KACb,CAACA,IAEJ,IAAMG,EAAa,uCAAG,8BAAArC,EAAA,6DAClB1E,QAAQC,IAAIa,EAAK6C,GADC,SAGahE,MAAM,wGAAD,OAAyGgE,EAAzG,oBAAiI7C,IAHnJ,cAGZkG,EAHY,gBAIWA,EAAiBlH,OAJ5B,OAIZmH,EAJY,OAKlBjH,QAAQC,IAAI,iBAAkBgH,GAC9BN,EAAaM,GANK,2CAAH,qDAUbH,EAAiB,uCAAG,8BAAApC,EAAA,sEACQ/E,MAAM,yGAAD,OAA0G+G,EAAUQ,UAApH,oBAAyIpG,IADtJ,cAChBqG,EADgB,gBAEWA,EAAgBrH,OAF3B,OAEhBsH,EAFgB,OAGtBpH,QAAQC,IAAI,uBAAwBmH,EAAmBR,SACvDC,EAAWO,EAAmBR,SAJR,2CAAH,qDAOvB,OACI,yBAAKhI,UAAU,YACX,yBAAKA,UAAU,UACX,2BAAO4B,KAAK,OACR5B,UAAU,aACV6B,YAAY,2BACZjC,MAAK,UAAKsC,GACVJ,SAAU,SAACC,GAAS6F,EAAO7F,EAAMC,OAAOpC,UAE5C,2BAAOgC,KAAK,OACR5B,UAAU,aACV6B,YAAY,gBAEZC,SAAU,SAACC,GAAS8F,EAAgB9F,EAAMC,OAAOpC,UAErD,4BAAQI,UAAU,aAAayI,QAASN,GAAxC,WAEJ,yBAAKnI,UAAU,sBAEGiG,IAAZ+B,EAOEA,EAAQxG,QAAO,SAAC2E,EAAMhC,GAAP,OAAcA,EAAK,MAAIlC,KAClC,SAAAkE,GAAI,OACA,kBAAC,EAAD,CAAUrB,OAAQqB,EAAKrB,OAAQC,aAAcA,EAAcC,OAAQ9C,OAEzE,kCC1CPwG,EAnBH,WACR,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWvI,IAC1C,kBAAC,IAAD,CAAOqI,KAAK,iBAAiBC,OAAK,EAACC,UAAWC,IAC9C,kBAAC,IAAD,CAAOH,KAAK,aAAaC,OAAK,EAACC,UAAWlB,IAC1C,kBAAC,IAAD,CAAOgB,KAAK,iBAAiBE,UAAWlB,IACxC,kBAAC,IAAD,CAAOgB,KAAK,IAAIE,UAAWxI,Q,MCd/C0I,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.501729d1.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react'\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\r\n    const [theme, setTheme] = useState(\r\n        {\r\n            isLightTheme: true,\r\n            light: { syntax: '#555', ui: '#ddd', bg: '#eee'},\r\n            dark: { syntax: '#ddd', ui: '#333', bg: '#555'}\r\n        }\r\n    )\r\n    return ( \r\n        <ThemeContext.Provider value={{...theme}}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ThemeContextProvider;","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nimport './styles/Nav.css'\r\n\r\nconst Nav = () => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext)\r\n    const theme = isLightTheme ? light : dark;\r\n    return(\r\n        <div className='nav' style={{ background: theme.ui, color: theme.syntax }}>\r\n            <Link style={{ background: theme.ui, color: theme.syntax }} to='/'>\r\n                <div>Home</div>\r\n            </Link>\r\n            <Link style={{ background: theme.ui, color: theme.syntax }} to='/Champions'>\r\n                <div>Champions</div>\r\n            </Link>\r\n            <Link style={{ background: theme.ui, color: theme.syntax }} to='/Summoners'>\r\n                <div>Summoners</div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div className='pd-top pd-left'>\r\n            <h2>A website that uses Riot Games API to display the list and information of the Champions available in the game, and also search for different players and their stats if you have a RIOT Games developer key.</h2>\r\n            <div className='pd-top'><h2>What I have used:</h2>\r\n            <ul className='pd-top'>\r\n                <li>React</li>\r\n                <li>React-Router</li>\r\n                <li>Context API</li>\r\n                <li>Hooks</li>\r\n            </ul></div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState, useEffect, useContext} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nimport './styles/ChampionList.css'\r\n\r\nconst ChampionList = () => {\r\n\r\n    const [list, setList] = useState([]);\r\n    const [updatedList, setUpdatedList] = useState([]);\r\n    const [head, setHead] = useState(false)\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('https://ddragon.leagueoflegends.com/cdn/10.22.1/data/en_US/champion.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log('not lis',Object.keys(data.data))\r\n            setList(Object.keys(data.data));\r\n            setUpdatedList(Object.keys(data.data));\r\n            console.log('list', list)\r\n            setHead(true)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        (inputValue === '') ? setUpdatedList(list) : setUpdatedList(list.filter(champion => champion.toLowerCase().includes(inputValue.toLowerCase())))\r\n    },[inputValue])\r\n\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext)\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return(\r\n        <div style={{ background: theme.bg }}>\r\n            <div style={{ background: theme.ui, color: theme.syntax }} className='champlist'>\r\n                <div className='searchbar-container'>\r\n                    <input\r\n                        className='searchbar'\r\n                        type=\"text\"\r\n                        placeholder='Champion Name'\r\n                        value={`${inputValue}`}\r\n                        onChange={(event) => setInputValue(event.target.value)}></input>\r\n                </div>\r\n\r\n                <div className='champlist-container'>\r\n                    {updatedList.map(champion => {\r\n                        return(\r\n                            <Link className='champlist-item'\r\n                                style={{ background: theme.ui, color: theme.syntax }}\r\n                                key={`${champion}`}\r\n                                to={`/Champions/${champion}`}>\r\n                                    <img height='120px' width='120px' src={`https://ddragon.leagueoflegends.com/cdn/10.22.1/img/champion/${champion}.png`}></img>\r\n                                    <h3>{champion}</h3>\r\n                            </Link>\r\n                        )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChampionList;\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nimport './styles/Champion.css'\r\n\r\nconst ChampionList = (props) => {\r\n    \r\n    const [champ, setChamp] = useState({\r\n        name:'',\r\n        title: '',\r\n        lore: '',\r\n        stats: {\r\n            hp: 0,\r\n            hpperlevel: 0,\r\n            mp: 0,\r\n            mpperlevel: 0,\r\n            movespeed: 0,\r\n            armor: 0,\r\n            armorperlevel: 0,\r\n            spellblock: 0,\r\n            spellblockperlevel: 0,\r\n            attackrange: 0,\r\n            hpregen: 0,\r\n            hpregenperlevel: 0,\r\n            mpregen: 0,\r\n            mpregenperlevel: 0,\r\n            attackdamage: 0,\r\n            attackdamageperlevel: 0,\r\n            attackspeed: 0,\r\n            attackspeedperlevel: 0,\r\n        },\r\n        spells: []\r\n    });\r\n    \r\n    const [name, setName] = useState('name');\r\n    const [title, setTitle] = useState('')\r\n    const [lore, setLore] = useState('')\r\n    const [stats, setStats] = useState('')\r\n\r\n    const [head, setHead] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.id\r\n        //console.log(id)\r\n        fetch(`https://ddragon.leagueoflegends.com/cdn/10.22.1/data/en_US/champion/${id}.json`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setChamp(data['data'][`${id}`])\r\n            })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        // setName((prevName)=>{\r\n        //     return (typeof(champ['name']) === undefined) ? prevName : champ['name'] })\r\n        setName(champ['name'])\r\n        setTitle(champ[\"title\"])\r\n        setLore(champ['lore'])\r\n        setStats(champ['stats'])\r\n        console.log('name', name)\r\n        console.log('title', title)\r\n        console.log('lore', lore)\r\n        console.log('stats', stats)\r\n        console.log(typeof(name))\r\n        console.log(champ.spells)\r\n    }, [champ, name, title, lore, stats])\r\n    \r\n    const { isLightTheme, light, dark } = useContext(ThemeContext)\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return(\r\n        <div className='outer_container'>\r\n            <div className='level-1-container'>\r\n                <div className='level-1-item name-lore'>\r\n                    <div className='name-title'>\r\n                        <h1 className='name'><strong>{name.toUpperCase()}</strong></h1>\r\n                        <h3 className='title'>{title}</h3>\r\n                    </div>                    \r\n                    <h3 className='lore'>{lore}</h3>\r\n                </div>\r\n                <div className='level-1-item load-screen-image'>\r\n                    <img className='level-1-image' alt={`${name}`} src={`https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${name}_0.jpg`} />\r\n                </div>\r\n            </div>\r\n            <div className='level-2-container'>\r\n                <h2>Stats</h2>\r\n                <div className='stats-container'>\r\n                    <div className='left-container'>\r\n                        <ul>\r\n                            <li><strong>HP:</strong> {stats.hp +'+'+ stats.hpperlevel}</li>\r\n                            <li><strong>HP regen:</strong> {`${stats.hpregen}+${stats.hpregenperlevel}`}</li>\r\n                            <li><strong>Mana:</strong> {stats.mp +'+'+ stats.mpperlevel}</li>\r\n                            <li><strong>Mana regen:</strong> {`${stats.mpregen}+${stats.mpregenperlevel}`}</li>\r\n                            <li><strong>Move Speed:</strong> {`${stats.movespeed}`}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='right-container'>\r\n                        <ul>\r\n                            <li><strong>Attack Damage:</strong> {stats.attackdamage +'+'+ stats.attackdamageperlevel}</li>\r\n                            <li><strong>Attack Speed:</strong> {`${stats.attackspeed}+${stats.attackspeedperlevel}`}</li>\r\n                            <li><strong>Armor:</strong> {stats.armor +'+'+ stats.armorperlevel}</li>\r\n                            <li><strong>Magic Resist:</strong> {`${stats.spellblock}+${stats.spellblockperlevel}`}</li>\r\n                            <li><strong>Attack Range:</strong> {`${stats.attackrange}`}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='right-container'></div>\r\n                </div>\r\n            </div>\r\n            <div className='level-3-container'>\r\n                {champ.spells.map(spell => {\r\n                    return(\r\n                        <div className='ability' key={`${spell.id}`}>\r\n                            <div className='ability-text'>\r\n                                <h3>{spell.name}</h3>\r\n                                <p>{spell.description}</p>\r\n                            </div>\r\n                            <div className='ability-image'>\r\n                                <img width='64px' height='64px' src={`https://ddragon.leagueoflegends.com/cdn/10.22.1/img/spell/${spell.image.full}`}/>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChampionList;","import React, { useEffect, useState } from 'react'\r\n\r\nimport './styles/GameData.css'\r\n\r\nconst GameData = ({ gameId, summonerName, apiKey }) => {\r\n\r\n    //const [me, setMe] = useState(gameId)\r\n    useEffect(()=>{\r\n        fetchMatchData()\r\n    },[gameId])\r\n\r\n    let participantId\r\n\r\n    const [matchData, setMatchData] = useState({\r\n        \"participants\": [\r\n\r\n        ],\r\n        \"participantIdentities\": [\r\n\r\n        ]\r\n    })\r\n\r\n    const [display, setDisplay] = useState({\r\n        win: '',\r\n        spell1Id: '',\r\n        spell2Id: '',\r\n        kills: '',\r\n        deaths: '',\r\n        assists: '',\r\n        championName: '',\r\n    })\r\n\r\n    useEffect(()=>{\r\n        fetchMatchData()\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        //console.log(\"participant Identities\", matchData.participantIdentities)\r\n        getParticipantId()\r\n    }, [matchData])\r\n\r\n    useEffect(()=>{\r\n        console.log('display', display)\r\n    }, [display])\r\n\r\n    const fetchMatchData = async () => {\r\n        const rawMatchData = await fetch(`https://cors-anywhere.herokuapp.com/https://euw1.api.riotgames.com/lol/match/v4/matches/${gameId}?api_key=${apiKey}`)\r\n        const parsedMatchData = await rawMatchData.json()\r\n        console.log(\"parsed Match Data\", parsedMatchData)\r\n        setMatchData(parsedMatchData)\r\n    }\r\n\r\n    const getParticipantId = () => {\r\n        let data\r\n        if(matchData.participantIdentities !== undefined) {data = (matchData.participantIdentities.filter(item => item.player.summonerName.toLowerCase() === summonerName)[0])}\r\n        if(data!==undefined && data.participantId !== undefined){\r\n            participantId = data.participantId\r\n            //console.log(participantId)\r\n            getPlayerInfo()\r\n        }\r\n        //if(matchData.participantIdentities !== undefined) {(matchData.participantIdentities.forEach(item => console.log(item.player.summonerName.toLowerCase() === summonerName)))}\r\n    }\r\n\r\n    const getPlayerInfo = () =>{\r\n        const participants = matchData.participants\r\n        console.log(participants)\r\n        const [info] = participants.filter(item => participantId === item.participantId)\r\n        console.log(info)\r\n\r\n        const temp = {\r\n            win: info.stats.win,\r\n            spell1Id: info.spell1Id,\r\n            spell2Id: info.spell2Id,\r\n            kills: info.stats.kills,\r\n            deaths: info.stats.deaths,\r\n            assists: info.stats.assists,\r\n        }\r\n        getChampionName(info.championId)\r\n        getSummonerSpellName(info.spell1Id, 1)\r\n        getSummonerSpellName(info.spell2Id, 2)\r\n        setDisplay(temp)\r\n        \r\n    }\r\n\r\n    const getChampionName = async (id) => {\r\n        const rawData = await fetch('https://ddragon.leagueoflegends.com/cdn/10.25.1/data/en_US/champion.json')\r\n        const parsedData = await rawData.json()\r\n        const temp = Object.values(parsedData.data)\r\n        const [temp2] = temp.filter(item => item.key == id)\r\n        console.log(temp2.id)\r\n        setDisplay((prevState)=>{\r\n            const newState = {...prevState}\r\n            newState.championName = temp2.id\r\n            return newState\r\n        })\r\n    }\r\n\r\n    const getSummonerSpellName = async (id, num) => {\r\n        const rawData = await fetch('https://cors-anywhere.herokuapp.com/https://ddragon.leagueoflegends.com/cdn/10.25.1/data/en_US/summoner.json')\r\n        const parsedData = await rawData.json()\r\n        const temp = Object.values(parsedData.data)\r\n        const [temp2] = temp.filter(item => item.key == id)\r\n        console.log('summoner spell Id', temp2.id);\r\n        (num === 1) ?\r\n            setDisplay((prevState)=>{\r\n                const newState = {...prevState}\r\n                newState.spell1Name = temp2.id\r\n                return newState\r\n            }) :\r\n            setDisplay((prevState)=>{\r\n                const newState = {...prevState}\r\n                newState.spell2Name = temp2.id\r\n                return newState\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div>{gameId}</div>\r\n            <div>{summonerName}</div> */}\r\n            {(display.championName !== '') ?\r\n                <div className='game-card' style={{backgroundColor: (display.win)?\"springgreen\":\"rgb(197, 67, 35)\"}}>\r\n                    <div className='game-mode'>{matchData.gameMode}</div>\r\n                    <div className=\"champion\">\r\n                        <img classname='gamecard-champ-image' src={`https://ddragon.leagueoflegends.com/cdn/10.25.1/img/champion/${display.championName}.png`} />\r\n                        <div>{display.championName}</div>\r\n                    </div>\r\n                    <div className=\"summoners\">\r\n                        <img width='40px' height='40px' src={`https://ddragon.leagueoflegends.com/cdn/10.25.1/img/spell/${display.spell1Name}.png`} />\r\n                        <img width='40px' height='40px' src={`https://ddragon.leagueoflegends.com/cdn/10.25.1/img/spell/${display.spell2Name}.png`} />\r\n                    </div>\r\n                    <div className='info'>\r\n                        <div className=\"kda\">\r\n                            <div>{`${display.kills}/${display.deaths}/${display.assists}`}</div>\r\n                            <div>K/D/A</div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className='duration'>{Math.floor(matchData.gameDuration/60)}m {matchData.gameDuration%60}s</div>    \r\n                    </div>\r\n\r\n                </div>\r\n            : <div></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameData","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport GameData from './GameData'\r\n\r\nimport './styles/Summoners.css'\r\n\r\nconst Summoners = () => {\r\n\r\n    const [key, setKey] = useState('')\r\n    const [summonerName, setSummonerName] = useState('finalbosszeref')\r\n\r\n    const [fetchData, setFetchData] = useState('')\r\n    const [matches, setMatches] = useState([''])\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchMatchHistory()\r\n    }, [fetchData])\r\n\r\n    useEffect(()=>{\r\n        console.log(matches)\r\n    }, [matches])\r\n\r\n    const fetchSummoner = async () => {\r\n        console.log(key, summonerName)\r\n        // const rawFetchSummoner = await fetch(`https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${summonerName}?api_key=${key}`, {mode: 'cors'})\r\n        const rawFetchSummoner = await fetch(`https://cors-anywhere.herokuapp.com/https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${summonerName}?api_key=${key}`)\r\n        const parsedSummoner = await rawFetchSummoner.json()\r\n        console.log('fetch response', parsedSummoner)\r\n        setFetchData(parsedSummoner)\r\n        //fetchMatchHistory();\r\n    }\r\n\r\n    const fetchMatchHistory = async () => {\r\n        const rawMatchHistory = await fetch(`https://cors-anywhere.herokuapp.com/https://euw1.api.riotgames.com/lol/match/v4/matchlists/by-account/${fetchData.accountId}?api_key=${key}`)\r\n        const parsedMatchHistory = await rawMatchHistory.json()\r\n        console.log('parsed Match History', parsedMatchHistory.matches)\r\n        setMatches(parsedMatchHistory.matches)\r\n    }\r\n\r\n    return(\r\n        <div className='summoner'>\r\n            <div className='inputs'>\r\n                <input type='text'\r\n                    className='input-item'\r\n                    placeholder='Riot Games Developer Key'\r\n                    value={`${key}`}\r\n                    onChange={(event)=>{setKey(event.target.value)}}\r\n                />\r\n                <input type='text'\r\n                    className='input-item'\r\n                    placeholder='Summoner Name'\r\n                    // value={`${summonerName}`}\r\n                    onChange={(event)=>{setSummonerName(event.target.value)}}\r\n                />\r\n                <button className='input-item' onClick={fetchSummoner}>Search</button>\r\n            </div>\r\n            <div className='summoner-data'>\r\n                {/* <div className='info'>{fetchData.accountId}</div> */}\r\n                {(matches !== undefined ) ?\r\n                    // matches.map(match => {\r\n                    // return (\r\n                    //     <GameData gameId={match.gameId} summonerName={summonerName}></GameData>\r\n                    // )\r\n                    // })\r\n                    //<GameData gameId={matches[0].gameId} summonerName={summonerName}></GameData>\r\n                    matches.filter((item, id) => id < 10).map(\r\n                        item => \r\n                            <GameData gameId={item.gameId} summonerName={summonerName} apiKey={key}></GameData>\r\n                        )\r\n                    : <div></div>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summoners;","import React from 'react'\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport Nav from './Nav'\r\nimport Home from './Home'\r\nimport ChampionList from './ChampionList'\r\nimport Champion from './Champion'\r\nimport Summoners from './Summoners'\r\nimport ThemeContextProvider from '../contexts/ThemeContext'\r\n\r\nconst App = () => {\r\n    return(\r\n        <ThemeContextProvider>\r\n            <Router>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route path='/Champions' exact component={ChampionList} />\r\n                    <Route path='/Champions/:id' exact component={Champion} />\r\n                    <Route path='/Summoners' exact component={Summoners} />\r\n                    <Route path='/Summoners/:id' component={Summoners} />\r\n                    <Route path='/' component={Home} />\r\n                </Switch>            \r\n            </Router>\r\n        </ThemeContextProvider>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}